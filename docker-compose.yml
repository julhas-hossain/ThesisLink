version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: thesislink_postgres
    environment:
      POSTGRES_USER: thesislink
      POSTGRES_PASSWORD: thesislink_password
      POSTGRES_DB: thesislink
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - thesislink_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thesislink"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: thesislink_redis
    ports:
      - "6379:6379"
    networks:
      - thesislink_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: thesislink_backend
    environment:
      DATABASE_URL: postgresql://thesislink:thesislink_password@postgres:5432/thesislink
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
      DEBUG: ${DEBUG:-True}
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - thesislink_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: thesislink_celery_worker
    environment:
      DATABASE_URL: postgresql://thesislink:thesislink_password@postgres:5432/thesislink
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - thesislink_network
    command: celery -A app.services.scheduler_service.celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: thesislink_celery_beat
    environment:
      DATABASE_URL: postgresql://thesislink:thesislink_password@postgres:5432/thesislink
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - thesislink_network
    command: celery -A app.services.scheduler_service.celery_app beat --loglevel=info

  # Frontend (to be implemented)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: thesislink_frontend
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - backend
  #   networks:
  #     - thesislink_network
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules

volumes:
  postgres_data:
  backend_uploads:

networks:
  thesislink_network:
    driver: bridge
